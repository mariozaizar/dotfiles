# Show last matched commit searching by message: `git show :/something`
# Show how many branches have this commit: `git branch --contains c988bc1`
# Recover deleted commits: `git fsck --lost-found`
# Find how different are two branches: `git diff production master --stat`
# Less informative status: `git status -sb`
# Better diff (don't show a conflict as whole line): `git diff production master --word-diff`
# Enable git autospelling: `git config --global help.autocorrect 1`
# Enable rerere (reuse recorded resolution): `git config --global rerere.enabled 1`

[push]
  default = current

###############################################################################
[user]
  name = <%= @full_name %>
  email = <%= @github_email %>

[github]
  user = <%= @github_user %>
###############################################################################

# I don't like rebases
# [autosetup]
#   rebase = true
# [branch]
#   autosetuprebase = remote

[color]
  ui = true
  interactive = auto
  branch = auto
  diff = auto
  status = auto

# [color "branch"]
#   current = yellow reverse
#   local = yellow
#   remote = green

# [color "diff"]
#   meta = yellow bold
#   frag = magenta bold
#   old = red bold
#   new = green bold

# [color "status"]
#   added = yellow
#   changed = green
#   untracked = cyan

[alias]
  includes = branch --contains
  slap = blame -w
  co = checkout
  ci = commit
  st = status
  br = branch
  top = shortlog -s -n
  last = log -n 1 -p
  state = status -sb
  # state = status --short
  files = show --pretty=\"format:\" --name-only
###############################################################################
  today = log --pretty=format:\"* %s%d [%h]\" --no-merges --date=short --author=<%= @github_user %> --since=\"$DATE 00:00:00\" --until=\"$DATE 24:00:00\"
  mine = log --pretty=format:\"[ %h ] %ad - %s%d\" --no-merges --date=short --author=<%= @github_user %>
###############################################################################
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --date=short --decorate
  current = log --pretty=format:\"%h %ad | %s%d [%an]\" --date=short -n1
  go-next = checkout HEAD@{1}
  go-prev = checkout HEAD^1
  type = cat-file -t
  datetag = '!git tag `date "+%Y%m%d%H%M"`'

# Those settings are not there to remove trailing whitespace but to:
# core.whitespace: detect them, and raise errors
# apply.whitespace: and strip them, but only during patch, not "always automatically"
[core]
  excludesfile = <%= HOME_DIR %>/.gitignore
  whitespace = fix

[apply]
  whitespace = fix

[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =

[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true

# SourceTree Git-Flow
[gitflow "branch"]
	master = production
	develop = master

# SourceTree Git-Flow
[gitflow "prefix"]
	feature = feature_
	release = release_
	hotfix = hotfix_
	support = support_
  versiontag = v

[diff]
	tool = opendiff

[merge]
	tool = opendiff

[help]
  autocorrect = 1

[rerere]
  enabled = 1
